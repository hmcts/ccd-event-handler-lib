plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'org.owasp.dependencycheck' version '5.0.0'
}

group 'uk.gov.hmcts.reform'
version '0.2.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext.versions = [
    jackson: '2.9.9'
]

dependencies {
    implementation group: 'com.google.guava', name: 'guava', version: '28.0-jre'
    implementation group: 'io.github.openfeign', name: 'feign-jackson', version: '10.2.3'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson
    implementation group: 'org.hibernate', name: 'hibernate-validator', version: '6.0.17.Final'
    implementation group: 'org.hibernate', name: 'hibernate-validator-cdi', version: '6.0.17.Final'
    implementation group: 'org.glassfish', name: 'javax.el', version: '3.0.1-b09'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
    implementation group: 'io.vavr', name: 'vavr', version: '1.0.0-alpha-2'

    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.12.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.28.2'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.28.2'
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock-jre8-standalone', version: '2.23.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1'

    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1'
}

// region static code analysis

checkstyle {
    maxWarnings = 0
    toolVersion = '8.21'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
    toolVersion = "6.15.0"
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSets = []
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

// endregion

// region test coverage

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
    }
}

// endregion

// region publishing

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId 'bulk-scan-ccd-event-handler'
            version project.version
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['Main']
    publish = true
    pkg {
        repo = 'hmcts-maven'
        name = 'bulk-scan-ccd-event-handler'
        userOrg = 'hmcts'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/hmcts/bulk-scan-ccd-event-handler-lib'
        version {
            name = project.version
        }
    }
}

// endregion
